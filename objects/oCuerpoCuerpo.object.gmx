<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEnemigo</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Movimiento y velocidad segun IA</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//movimiento y velocidad segun IA

//centro al enemigo para comparar con heroe y vista
var vX = x + TAM_CASILLA/2;
var vY = y + TAM_CASILLA/2;

//vista
var viewX = view_xview[0];
var viewY = view_yview[0];
var viewH = view_wport[0];
var viewV = view_hport[0];

//si el enemigo esta dentro de la vista (o en un 1,5 de rango)
//if((vX &gt;= viewX - viewH/2) and (vY &gt;= viewY - viewV/2) and (vX &lt;= viewX + 3*viewH/2) and (vY &lt;= viewY + 3*viewV/2))

//si el enemigo esta dentro de la vista (o en un 1,25 de rango)
//if((vX &gt;= viewX - viewH/4) and (vY &gt;= viewY - viewV/4) and (vX &lt;= viewX + 5*viewH/4) and (vY &lt;= viewY + 5*viewV/4))

//si el enemigo esta dentro de la vista
if((vX &gt;= viewX) and (vY &gt;= viewY) and (vX &lt;= viewX + viewH) and (vY &lt;= viewY + viewV))
{
    if(Trasladandose)
    {
        //avanza en la misma direccion (salvo por las colisiones), asi hacen falta menos calculos y el movimiento es mas estable
        Trasladar_Tiempo += 1;
        if(Trasladar_Tiempo &gt;= 5) //son 5 steps trasladandose
            Trasladandose = false;
    }

    if(!Trasladandose) //reclacular direccion
    {
        //buscar heroe mas cercano (por ahora pongo el primer heroe) !!!!!
        iHeroe = instance_find(oHeroe, 0);
        if(instance_exists(iHeroe))
        {
            var heroeX = iHeroe.x;
            var heroeY = iHeroe.y;
        
            //moverse hacia el heroe
            if(vX &gt; heroeX)
            {
                hspeed = -Velocidad;
            }
            else if(vX &lt; heroeX)
            {
                hspeed = Velocidad;
            }
            if(vY &gt; heroeY)
            {
                vspeed = -Velocidad;
            }
            else if(vY &lt; heroeY)
            {
                vspeed = Velocidad;
            }
            
            //guarda direccion para el sprite y para mantenerla mientra se traslada
            Trasladandose = true;
            Trasladar_Tiempo = 0;
            if(vspeed &lt; 0 and hspeed &gt; 0)
            {
                Direccion = DIRECCION_UR;   
            }
            else if(vspeed &gt; 0 and hspeed &gt; 0)
            {
                Direccion = DIRECCION_DR;
            }
            else if(vspeed &lt; 0 and hspeed &lt; 0)
            {
                Direccion = DIRECCION_UL;
            }
            else if(vspeed &gt; 0 and hspeed &lt; 0)
            {
                Direccion = DIRECCION_DL;
            }
            else if(hspeed &gt; 0)
            {
                Direccion = DIRECCION_R;
            }
            else if(hspeed &lt; 0)
            {
                Direccion = DIRECCION_L;
            }
            else if(vspeed &lt; 0)
            {
                Direccion = DIRECCION_U;
            }
            else if(vspeed &gt; 0)
            {
                Direccion = DIRECCION_D;
            }
            else
            {
                Direccion = -1;
            }           
        }
        else //si no hay heroe
        {
            speed = 0;
        }
    }
}
else //fuera de la vista
{
    speed = 0;
}

        
    /*        
    //margen de acercamiento para no seguir modificando la direccion e ir recto
    var vH = TAM_CASILLA/4;
    var vV = TAM_CASILLA/4;
    
    if(vX &gt; heroeX)
    {
        if(vX &gt; heroeX + vH)
            hspeed = -Velocidad;
        else
            hspeed = 0; //no supera el margen de acercamiento
    }
    else if(vX &lt; heroeX)
    {
        if(vX &lt; heroeX - vH)
            hspeed = Velocidad;
        else
            hspeed = 0;
    }
    if(vY &gt; heroeY)
    {
        if(vY &gt; heroeY + vV)
            vspeed = -Velocidad;
        else
            vspeed = 0;
    }
    else if(vY &lt; heroeY)
    {
        if(vY &lt; heroeY - vV)
            vspeed = Velocidad;
        else
            vspeed = 0;
    }
    */

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Pone el sprite segun la direccion</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//poner el sprite segun la direccion

if(Direccion &lt;&gt; -1)
{
    sprite_index = global.Enemigo_Sprites[Tipo_Enemigo, Direccion];
}
else //quieto ???
{
    //mantiene el sprite y pone la subimagen cero (la de estarse quieto)
    image_index = 0;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Ejecuta step del padre</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//ejecuta el step del padre

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
