<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Generar enemigos</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//generar enemigos

if(Tiempo_Enemigo &gt; Tiempo_Nivel * JUEGO_FPS) //se crea un enemigo
{
    //posicion del generador
    var vX = x;
    var vY = y;
    
    //busca sitio para poner el enemigo
    var pX = vX;
    var pY = vY;

    //guarda las posibles posiciones para poner el enemigo
    var iPos = 0;
    Posiciones_X[0] = -1;
    Posiciones_Y[0] = -1;

    pX = vX - TAM_CASILLA; //UL
    pY = vY - TAM_CASILLA;
    if(!scPosicionColision(pX, pY))
    {
        Posiciones_X[iPos] = pX;
        Posiciones_Y[iPos] = pY;
        iPos += 1;
    }
    pX = vX - TAM_CASILLA; //L
    pY = vY;
    if(!scPosicionColision(pX, pY))
    {
        Posiciones_X[iPos] = pX;
        Posiciones_Y[iPos] = pY;
        iPos += 1;
    }
    pX = vX - TAM_CASILLA; //DL
    pY = vY + TAM_CASILLA;
    if(!scPosicionColision(pX, pY))
    {
        Posiciones_X[iPos] = pX;
        Posiciones_Y[iPos] = pY;
        iPos += 1;
    }
    pX = vX; //D
    pY = vY + TAM_CASILLA;
    if(!scPosicionColision(pX, pY))
    {
        Posiciones_X[iPos] = pX;
        Posiciones_Y[iPos] = pY;
        iPos += 1;
    }
    pX = vX + TAM_CASILLA; //DR
    pY = vY + TAM_CASILLA;
    if(!scPosicionColision(pX, pY))
    {
        Posiciones_X[iPos] = pX;
        Posiciones_Y[iPos] = pY;
        iPos += 1;
    }
    pX = vX + TAM_CASILLA; //R
    pY = vY;
    if(!scPosicionColision(pX, pY))
    {
        Posiciones_X[iPos] = pX;
        Posiciones_Y[iPos] = pY;
        iPos += 1;
    }
    pX = vX + TAM_CASILLA; //UR
    pY = vY - TAM_CASILLA;
    if(!scPosicionColision(pX, pY))
    {
        Posiciones_X[iPos] = pX;
        Posiciones_Y[iPos] = pY;
        iPos += 1;
    }
    pX = vX; //U
    pY = vY - TAM_CASILLA;
    if(!scPosicionColision(pX, pY))
    {
        Posiciones_X[iPos] = pX;
        Posiciones_Y[iPos] = pY;
        iPos += 1;
    }
    
    if(iPos &gt; 0) //si hay algun sitio
    {
        //elige una de las posiciones
        var iRandomPos = floor(random_range(0, iPos));
        pX = Posiciones_X[iRandomPos];
        pY = Posiciones_Y[iRandomPos];
        
        scCrearEnemigo(Tipo_Enemigo, Nivel, pX, pY); //crea e inicializa al enemigo
    }
 
    Tiempo_Enemigo = 0;
}
else
{
    Tiempo_Enemigo += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
